{"id":"../../node_modules/xss-clean/lib/xss.js","dependencies":[{"name":"C:\\Users\\Anish\\OneDrive\\Desktop\\ShopMe\\node_modules\\xss-clean\\lib\\xss.js.map","includedInParent":true,"mtime":1456448065000},{"name":"C:\\Users\\Anish\\OneDrive\\Desktop\\ShopMe\\package.json","includedInParent":true,"mtime":1618148497487},{"name":"C:\\Users\\Anish\\OneDrive\\Desktop\\ShopMe\\node_modules\\xss-clean\\package.json","includedInParent":true,"mtime":1617151950373},{"name":"xss-filters","loc":{"line":11,"column":26},"parent":"C:\\Users\\Anish\\OneDrive\\Desktop\\ShopMe\\node_modules\\xss-clean\\lib\\xss.js","resolved":"C:\\Users\\Anish\\OneDrive\\Desktop\\ShopMe\\node_modules\\xss-filters\\src\\xss-filters.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.clean = clean;\n\nvar _xssFilters = require('xss-filters');\n\nfunction clean() {\n  var data = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\n  var isObject = false;\n  if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n    data = JSON.stringify(data);\n    isObject = true;\n  }\n\n  data = (0, _xssFilters.inHTMLData)(data).trim();\n  if (isObject) data = JSON.parse(data);\n\n  return data;\n}\n"},"sourceMaps":{"js":{"version":3,"sources":["../src/xss.js"],"names":[],"mappings":";;;;;;;;QAOgB;;;;AAAT,SAAS,KAAT,GAA0B;MAAX,6DAAO,kBAAI;;AAC/B,MAAI,WAAW,KAAX,CAD2B;AAE/B,MAAI,QAAO,mDAAP,KAAgB,QAAhB,EAA0B;AAC5B,WAAO,KAAK,SAAL,CAAe,IAAf,CAAP,CAD4B;AAE5B,eAAW,IAAX,CAF4B;GAA9B;;AAKA,SAAO,4BAAW,IAAX,EAAiB,IAAjB,EAAP,CAP+B;AAQ/B,MAAI,QAAJ,EAAc,OAAO,KAAK,KAAL,CAAW,IAAX,CAAP,CAAd;;AAEA,SAAO,IAAP,CAV+B;CAA1B","file":"xss.js","sourcesContent":["import { inHTMLData } from 'xss-filters'\n\n/**\n * clean for xss\n * @param {string/object} data The value to sanitize\n * @return {string/object} Returns the sanitized value\n */\nexport function clean(data = '') {\n  let isObject = false\n  if (typeof data === 'object') {\n    data = JSON.stringify(data)\n    isObject = true\n  }\n\n  data = inHTMLData(data).trim()\n  if (isObject) data = JSON.parse(data)\n\n  return data\n}\n"]}},"error":null,"hash":"0504684e9853723be6fd95c19175195a","cacheData":{"env":{}}}